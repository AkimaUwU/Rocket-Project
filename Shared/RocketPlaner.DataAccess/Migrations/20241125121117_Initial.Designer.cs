// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RocketPlaner.DataAccess.DataBase;

#nullable disable

namespace RocketPlaner.DataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241125121117_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.DestinationsDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("TaskId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.TasksDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NotifyDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("Title");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.UsersDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("TelegramId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TelegramId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.DestinationsDao", b =>
                {
                    b.HasOne("RocketPlaner.Application.Contracts.DataBaseContracts.TasksDao", "Task")
                        .WithMany("Destinations")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.TasksDao", b =>
                {
                    b.HasOne("RocketPlaner.Application.Contracts.DataBaseContracts.UsersDao", "Owner")
                        .WithMany("Tasks")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.TasksDao", b =>
                {
                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("RocketPlaner.Application.Contracts.DataBaseContracts.UsersDao", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
